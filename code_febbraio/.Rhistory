source("STEP2RCPP.R")
source("STEP4RCPP.R")
source("STEP5RCPP.R")
source("STEP7RCPP.R")
source("STEP8RCPP.R")
source("gjamHfunctions.R")
source("check_IC.R")
source("prova_step.R")
#alpha0=c(1e-3,1e-2,1e-1,1,1e1,1e2,1e3)
alpha0<-10
niter=1000
burnin=500
N_stick=13
r=4
S<-5 #number of species
n_sites=300
#q<-list()
#for(i in 1:length(alpha0)){
#nn<-prova_step(alpha0[i],niter)
#q[[i]]<-nn
#}
#l<-list()
#for(i in 1:length(alpha0)){
#  l[[i]]<-sum(q[[i]]==1)/length(q[[i]])
#}
#l
h<-prova_step(alpha0,niter,burnin,N_stick,r,S)
#h2<-prova_step(alpha0,niter,N_stick,r,S)
#h3<-prova_step(alpha0,niter,N_stick,r,S)
#h<-list(h1,h2,h3)
#h<-as.mcmc(h)
#h2<-as.mcmc(h2)
#h3<-as.mcmc(h3)
#h<-as.mcmc.list(h1,h2,h3)
#h<-ggs(h)
#GRAFICI DELLA CATENA
#Traceplot
#x11()
#ggs_traceplot(h) +
#  geom_area(colour="blue") + xlab('Iterations') + ylab('A[2,2] ') + theme(text = element_text(size=15, family="LM Roman 10")) +
# labs(fill = 'Technologies')+ ggtitle('Traceplot')
#Running Mean
#x11()
#ggs_running(h)
mat_bin=matrix(0,nrow=S,ncol=r)
check_IC(h$A_inf, h$A_sup, h$A_true, mat_bin)
#Autocorrelation
#x11()
#ggs_autocorrelation(h1)
A_media
h$A_media
h%A_true
h$A_true
#Librerie
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Clear console
cat("\014")
#function that generate a dataset by sampling from the model with given parameters
library("mvtnorm")
library("MASS")
library("corpcor")
library("MCMCpack")
library("coda")
library("ggmcmc")
library("extrafont")
# Install **TTF** Latin Modern Roman fonts from www.fontsquirrel.com/fonts/latin-modern-roman
# Import the newly installed LModern fonts, change the pattern according to the
# filename of the lmodern ttf files in your fonts folder
#font_import(pattern = "lmodern*")
#loadfonts(device = "win")
#par(family = "LM Roman 10")
Rcpp::sourceCpp('cppFns.cpp')
#Inizializzazione variabili
for (i in seq(1,8)) {
source(paste("STEP",i,".R", sep = ""))
}
source("compute_GD_prior.R")
source("STEP3RCPP.R")
source("tnorm.R")
source("STEP1RCPP.R")
source("STEP2RCPP.R")
source("STEP4RCPP.R")
source("STEP5RCPP.R")
source("STEP7RCPP.R")
source("STEP8RCPP.R")
source("STEP8TaylorRCPP.R")
source("gjamHfunctions.R")
source("check_IC.R")
source("prova_step.R")
#alpha0=c(1e-3,1e-2,1e-1,1,1e1,1e2,1e3)
alpha0<-10
niter=1000
burnin=500
N_stick=13
r=4
S<-5 #number of species
n_sites=180
#q<-list()
#for(i in 1:length(alpha0)){
#nn<-prova_step(alpha0[i],niter)
#q[[i]]<-nn
#}
#l<-list()
#for(i in 1:length(alpha0)){
#  l[[i]]<-sum(q[[i]]==1)/length(q[[i]])
#}
#l
h<-prova_step(alpha0,niter,burnin,N_stick,r,S)
#h2<-prova_step(alpha0,niter,N_stick,r,S)
#h3<-prova_step(alpha0,niter,N_stick,r,S)
#h<-list(h1,h2,h3)
#h<-as.mcmc(h)
#h2<-as.mcmc(h2)
#h3<-as.mcmc(h3)
#h<-as.mcmc.list(h1,h2,h3)
#h<-ggs(h)
#GRAFICI DELLA CATENA
#Traceplot
#x11()
#ggs_traceplot(h) +
#  geom_area(colour="blue") + xlab('Iterations') + ylab('A[2,2] ') + theme(text = element_text(size=15, family="LM Roman 10")) +
# labs(fill = 'Technologies')+ ggtitle('Traceplot')
#Running Mean
#x11()
#ggs_running(h)
mat_bin=matrix(0,nrow=S,ncol=r)
check_IC(h$A_inf, h$A_sup, h$A_true, mat_bin)
#Autocorrelation
#x11()
#ggs_autocorrelation(h1)
#Librerie
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Clear console
cat("\014")
#function that generate a dataset by sampling from the model with given parameters
library("mvtnorm")
library("MASS")
library("corpcor")
library("MCMCpack")
library("coda")
library("ggmcmc")
library("extrafont")
# Install **TTF** Latin Modern Roman fonts from www.fontsquirrel.com/fonts/latin-modern-roman
# Import the newly installed LModern fonts, change the pattern according to the
# filename of the lmodern ttf files in your fonts folder
#font_import(pattern = "lmodern*")
#loadfonts(device = "win")
#par(family = "LM Roman 10")
Rcpp::sourceCpp('cppFns.cpp')
#Inizializzazione variabili
for (i in seq(1,8)) {
source(paste("STEP",i,".R", sep = ""))
}
source("compute_GD_prior.R")
source("STEP3RCPP.R")
source("tnorm.R")
source("STEP1RCPP.R")
source("STEP2RCPP.R")
source("STEP4RCPP.R")
source("STEP5RCPP.R")
source("STEP7RCPP.R")
source("STEP8RCPP.R")
source("STEP8TaylorRCPP.R")
source("gjamHfunctions.R")
source("check_IC.R")
source("fit_gjam_gibbs.R")
#alpha0=c(1e-3,1e-2,1e-1,1,1e1,1e2,1e3)
alpha0<-1e2
ndraws=600
burnin=500
N_stick=13
r=4
S<-5 #number of species
n_sites=180
#q<-list()
#for(i in 1:length(alpha0)){
#nn<-prova_step(alpha0[i],niter)
#q[[i]]<-nn
#}
#l<-list()
#for(i in 1:length(alpha0)){
#  l[[i]]<-sum(q[[i]]==1)/length(q[[i]])
#}
#l
chain<-fit_gjam_gibbs(alpha0,ndraws,burnin,N_stick,r,S)
chain<-as.vector(chain)
chain<-as.numeric(chain)
chain<-as.data.frame(chain)
x=h$x
Y=h$Y
#h2<-prova_step(alpha0,niter,N_stick,r,S)
#h3<-prova_step(alpha0,niter,N_stick,r,S)
#h<-list(h1,h2,h3)
chain<-as.mcmc(chain)
#h2<-as.mcmc(h2)
#h3<-as.mcmc(h3)
#h<-as.mcmc.list(h1,h2,h3)
chain<-ggs(chain)
#GRAFICI DELLA CATENA
#Traceplot
x11()
ggs_traceplot(chain) #+
# geom_area(colour="blue") + xlab('Iterations') + ylab('A[2,2] ') + theme(text = element_text(size=15, family="LM Roman 10")) +
# labs(fill = 'Technologies')+ ggtitle('Traceplot')
#Running Mean
x11()
ggs_running(chain)
#Intervalli di confidenza per A
mat_bin=matrix(0,nrow=S,ncol=r)
#check_IC(h$A_inf, h$A_sup, h$A_true, mat_bin)
#Autocorrelation
x11()
ggs_autocorrelation(chain)
x11()
ggs_histogram(chain)
#Librerie
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Clear console
cat("\014")
#function that generate a dataset by sampling from the model with given parameters
library("mvtnorm")
library("MASS")
library("corpcor")
library("MCMCpack")
library("coda")
library("ggmcmc")
library("extrafont")
# Install **TTF** Latin Modern Roman fonts from www.fontsquirrel.com/fonts/latin-modern-roman
# Import the newly installed LModern fonts, change the pattern according to the
# filename of the lmodern ttf files in your fonts folder
#font_import(pattern = "lmodern*")
#loadfonts(device = "win")
#par(family = "LM Roman 10")
Rcpp::sourceCpp('cppFns.cpp')
#Inizializzazione variabili
for (i in seq(1,8)) {
source(paste("STEP",i,".R", sep = ""))
}
source("compute_GD_prior.R")
source("STEP3RCPP.R")
source("tnorm.R")
source("STEP1RCPP.R")
source("STEP2RCPP.R")
source("STEP4RCPP.R")
source("STEP5RCPP.R")
source("STEP7RCPP.R")
source("STEP8RCPP.R")
source("STEP8TaylorRCPP.R")
source("gjamHfunctions.R")
source("check_IC.R")
source("fit_gjam_gibbs.R")
#alpha0=c(1e-3,1e-2,1e-1,1,1e1,1e2,1e3)
alpha0<-1e2
ndraws=600
burnin=500
N_stick=13
r=4
S<-5 #number of species
n_sites=180
#q<-list()
#for(i in 1:length(alpha0)){
#nn<-prova_step(alpha0[i],niter)
#q[[i]]<-nn
#}
#l<-list()
#for(i in 1:length(alpha0)){
#  l[[i]]<-sum(q[[i]]==1)/length(q[[i]])
#}
#l
chain<-fit_gjam_gibbs(alpha0,ndraws,burnin,N_stick,r,S, n_sites)
chain<-as.vector(chain)
chain<-as.numeric(chain)
chain<-as.data.frame(chain)
x=h$x
Y=h$Y
#h2<-prova_step(alpha0,niter,N_stick,r,S)
#h3<-prova_step(alpha0,niter,N_stick,r,S)
#h<-list(h1,h2,h3)
chain<-as.mcmc(chain)
#h2<-as.mcmc(h2)
#h3<-as.mcmc(h3)
#h<-as.mcmc.list(h1,h2,h3)
chain<-ggs(chain)
#GRAFICI DELLA CATENA
#Traceplot
x11()
ggs_traceplot(chain) #+
# geom_area(colour="blue") + xlab('Iterations') + ylab('A[2,2] ') + theme(text = element_text(size=15, family="LM Roman 10")) +
# labs(fill = 'Technologies')+ ggtitle('Traceplot')
#Running Mean
x11()
ggs_running(chain)
#Intervalli di confidenza per A
mat_bin=matrix(0,nrow=S,ncol=r)
#check_IC(h$A_inf, h$A_sup, h$A_true, mat_bin)
#Autocorrelation
x11()
ggs_autocorrelation(chain)
x11()
ggs_histogram(chain)
#Librerie
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Clear console
cat("\014")
#function that generate a dataset by sampling from the model with given parameters
library("mvtnorm")
library("MASS")
library("corpcor")
library("MCMCpack")
library("coda")
library("ggmcmc")
library("extrafont")
# Install **TTF** Latin Modern Roman fonts from www.fontsquirrel.com/fonts/latin-modern-roman
# Import the newly installed LModern fonts, change the pattern according to the
# filename of the lmodern ttf files in your fonts folder
#font_import(pattern = "lmodern*")
#loadfonts(device = "win")
#par(family = "LM Roman 10")
Rcpp::sourceCpp('cppFns.cpp')
#Inizializzazione variabili
for (i in seq(1,8)) {
source(paste("STEP",i,".R", sep = ""))
}
source("compute_GD_prior.R")
source("STEP3RCPP.R")
source("tnorm.R")
source("STEP1RCPP.R")
source("STEP2RCPP.R")
source("STEP4RCPP.R")
source("STEP5RCPP.R")
source("STEP7RCPP.R")
source("STEP8RCPP.R")
source("STEP8TaylorRCPP.R")
source("gjamHfunctions.R")
source("check_IC.R")
source("fit_gjam_gibbs.R")
#alpha0=c(1e-3,1e-2,1e-1,1,1e1,1e2,1e3)
alpha0<-1e2
ndraws=2500
burnin=500
N_stick=13
r=4
S<-5 #number of species
n_sites=180
#q<-list()
#for(i in 1:length(alpha0)){
#nn<-prova_step(alpha0[i],niter)
#q[[i]]<-nn
#}
#l<-list()
#for(i in 1:length(alpha0)){
#  l[[i]]<-sum(q[[i]]==1)/length(q[[i]])
#}
#l
chain<-fit_gjam_gibbs(alpha0,ndraws,burnin,N_stick,r,S, n_sites)
chain<-as.vector(chain)
chain<-as.numeric(chain)
chain<-as.data.frame(chain)
x=h$x
Y=h$Y
#h2<-prova_step(alpha0,niter,N_stick,r,S)
#h3<-prova_step(alpha0,niter,N_stick,r,S)
#h<-list(h1,h2,h3)
chain<-as.mcmc(chain)
#h2<-as.mcmc(h2)
#h3<-as.mcmc(h3)
#h<-as.mcmc.list(h1,h2,h3)
chain<-ggs(chain)
#GRAFICI DELLA CATENA
#Traceplot
x11()
ggs_traceplot(chain) #+
# geom_area(colour="blue") + xlab('Iterations') + ylab('A[2,2] ') + theme(text = element_text(size=15, family="LM Roman 10")) +
# labs(fill = 'Technologies')+ ggtitle('Traceplot')
#Running Mean
x11()
ggs_running(chain)
#Intervalli di confidenza per A
mat_bin=matrix(0,nrow=S,ncol=r)
#check_IC(h$A_inf, h$A_sup, h$A_true, mat_bin)
#Autocorrelation
x11()
ggs_autocorrelation(chain)
x11()
ggs_histogram(chain)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Clear console
cat("\014")
#Libraries needed
library("mvtnorm")
library("MASS")
library("corpcor")
library("MCMCpack")
library("coda")
library("ggmcmc")
library("extrafont")
# Install **TTF** Latin Modern Roman fonts from www.fontsquirrel.com/fonts/latin-modern-roman
# Import the newly installed LModern fonts, change the pattern according to the
# filename of the lmodern ttf files in your fonts folder
#font_import(pattern = "lmodern*")
#loadfonts(device = "win")
#par(family = "LM Roman 10")
Rcpp::sourceCpp('cppFns.cpp')
#Call of all functions needed
for (i in seq(1,8)) {
source(paste("STEP",i,".R", sep = ""))
}
source("compute_GD_prior.R")
source("STEP3RCPP.R")
source("tnorm.R")
source("STEP1RCPP.R")
source("STEP2RCPP.R")
source("STEP4RCPP.R")
source("STEP5RCPP.R")
source("STEP7RCPP.R")
source("STEP8RCPP.R")
source("STEP8TaylorRCPP.R")
source("gjamHfunctions.R")
source("check_IC.R")
source("fit_gjam_gibbs.R")
#Initialization of function parameters needed
alpha0<-1e2 #Dirichlet mass parameter
ndraws=600 #number of iterations
burnin=500 #number of discarded iterations
N_stick=13 #level of truncation of the Dirichlet process
r=4 #number of latent factors
S<-5 #number of species
n_sites=180 #number of locations
#This function generates matrix x of covariates and matrix Y of absence/presence
simulation_fun<-function(Sp=S,nsamples=n_sites, r=4, K_t=4){
S<-Sp
n<- nsamples
#iterations<-it
#create the design matrix: here we use the intercept and one covariate (scaled!)
X<-cbind(rep(1,n),scale(runif(0,100,n=n)))
#create the coefficient matrix B (Sx2)
idx<-sample(S)
B_0<-scale(seq(0,100,length.out=S)[idx]) #intercept
idx<-sample(S)
B_1<-scale(seq(0,100,length.out=S)[idx]) #covariate coefficient
B<-cbind(B_0,B_1) #Coefficient matrix
L<-X%*%t(B) #We create the mean by multiplying B with the design matrix X
#We create A and then Sigma
A<-matrix(NA,nrow=K_t,ncol=r) #A is the matrix with the atoms only. Initialization.
sig=matrix(runif(n=r*r),ncol=r) #sig is the variance covariance matrix of Z.
for(i in 1:K_t){
A[i,]<-mvrnorm(n = 1, rep(0,r), Sigma=1*diag(r)) # We sample the unique values of A
}
idx<-sample((1:K_t),S,replace=T) #idx represents the labels
Lambda<-A[idx,] #We expand A using the labels to obtain Lambda (what we used to call A)
Sigma_true<-Lambda%*%t(Lambda)+0.1*diag(S) #We obtain Sigma. Here sigma_epsilon^2 is 0.1
#We obtain the correlation matrix R
R_true=cov2cor(Sigma_true)
#We sample V from the model
Y_cont<-L+rmvnorm(n = n, mean=rep(0,S), sigma=R_true)
# We obtain our binary dataset. Secondo me vi conviene prima testare il modello con Y_cont e poi su Y
Ybin<- ifelse(Y_cont>0,1,0)
Ycont<-Y_cont
give_back<-list(A_true = Lambda, B_true=B, Xdesign=X, mu_true=L, R_true=R_true, V=Ycont, Y=Ybin)
return(give_back)
}
data<-simulation_fun()
x<-data$Xdesign #x matrix of covariates
Y<-data$Y #Binary matrix Y
#Call of the function
chain<-fit_gjam_gibbs(alpha0,ndraws,burnin,N_stick,r,S, n_sites,x,Y)
#Analysis of output
chain<-as.vector(chain)
chain<-as.numeric(chain)
chain<-as.data.frame(chain)
x=h$x
Y=h$Y
#h2<-prova_step(alpha0,niter,N_stick,r,S)
#h3<-prova_step(alpha0,niter,N_stick,r,S)
#h<-list(h1,h2,h3)
chain<-as.mcmc(chain)
#h2<-as.mcmc(h2)
#h3<-as.mcmc(h3)
#h<-as.mcmc.list(h1,h2,h3)
chain<-ggs(chain)
#GRAFICI DELLA CATENA
#Traceplot
x11()
ggs_traceplot(chain) #+
# geom_area(colour="blue") + xlab('Iterations') + ylab('A[2,2] ') + theme(text = element_text(size=15, family="LM Roman 10")) +
# labs(fill = 'Technologies')+ ggtitle('Traceplot')
#Running Mean
x11()
ggs_running(chain)
#Intervalli di confidenza per A
mat_bin=matrix(0,nrow=S,ncol=r)
#check_IC(h$A_inf, h$A_sup, h$A_true, mat_bin)
#Autocorrelation
x11()
ggs_autocorrelation(chain)
x11()
ggs_histogram(chain)
